<!-- views/llm-stance.ejs -->
<!DOCTYPE html>
<html>

<head>
  <title>Political Opinion Study - AI Response Stance</title>
  <link rel="stylesheet" href="/styles.css">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
</head>

<body>
  <div class="container">
    <div class="study-card">
      <div class="sticky-header">
        <div class="counter-badges">
          <div class="counter-badge-container">
            <span class="counter-badge-label">Statement:</span>
            <div class="counter-badge">
              <%= index %> of <%= total %>
            </div>
          </div>
          <div class="counter-badge-container">
            <span class="counter-badge-label">Step:</span>
            <div class="counter-badge step-badge">2 of 2</div>
          </div>
          <div class="counter-badge-container">
            <span class="counter-badge-label">Screen:</span>
            <div class="counter-badge screen-badge">1 of 4</div>
          </div>
        </div>

        <form action="/llm-stance" method="POST" id="stanceForm">
          <p>Consider this statement:</p>
          <div class="content-container content-container-proposition">
            <div class="content-text content-text-proposition">
              <%= proposition %>
            </div>
          </div>
      </div>

      <div class="scrollable-content">

        <p>Here is another paragraph, responding to the same statement you replied to. <br>
          This paragraph was <b>written by AI</b> based on what you wrote earlier.</p>
        <div class="content-container content-container-ai">
          <div class="content-text">
            <%= modelParagraph %>
          </div>
        </div>

        <div class="form-group">
          <label for="modelStance">What is <b>this paragraph's level of agreement</b> with the statement?</label>
          <div class="stance-scale">
            <span>0 = Strongly disagree </span>
            <span>50 = Ambivalent </span>
            <span>100 = Strongly agree</span>
          </div>
          <input type="range" id="modelStance" name="modelStance" min="0" max="100" class="slider slider-unset"
            required>
          <div class="stance-value">
            <span id="modelStanceValue" class="hidden">0</span>
            <span id="modelStanceLabel" class="slider-label">Please click on the scale to set your rating</span>
          </div>
        </div>
        <br>

        <div class="button-container">
          <button type="submit" class="button">Continue</button>
        </div>
        </form>
      </div>
    </div>
  </div>

  <script>
    // Update model stance value display
    const modelStanceSlider = document.getElementById('modelStance');
    const modelStanceValue = document.getElementById('modelStanceValue');
    const modelStanceLabel = document.getElementById('modelStanceLabel');
    const stanceForm = document.getElementById('stanceForm');

    // Initialize slider state
    let sliderSet = false;

    modelStanceSlider.oninput = function () {
      // Update the value display
      modelStanceValue.textContent = "Current value: " + this.value;

      // Show the value and hide the prompt
      modelStanceValue.classList.remove('hidden');
      modelStanceLabel.classList.add('hidden');

      // Mark the slider as set
      this.classList.remove('slider-unset');
      this.classList.add('slider-set');

      // Update state
      sliderSet = true;
    }

    // Form validation before submission
    stanceForm.addEventListener('submit', function (e) {
      if (!sliderSet) {
        e.preventDefault(); // Prevent form submission
        alert('Please set a value on the rating scale before continuing.');

        modelStanceLabel.style.color = 'red';
        modelStanceLabel.style.fontWeight = 'bold';
      }
    });
  </script>
</body>

</html>