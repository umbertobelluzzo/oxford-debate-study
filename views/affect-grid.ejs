<!-- views/affect-grid.ejs -->
<!DOCTYPE html>
<html>

<head>
  <title>LLM Opinion Study - Affect Grid</title>
  <link rel="stylesheet" href="/styles.css">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
</head>

<body>
  <div class="container">
    <div class="study-card">
      <div class="sticky-header">
        <h1>Your Emotional State: <%= index %> of <%= total %>
        </h1>

        <form action="/affect-grid" method="POST">
          <p>Consider this <b>political statement</b>:</p>
          <div class="content-container content-container-proposition">
            <div class="content-text content-text-proposition">
              <%= proposition %>
            </div>
          </div>
      </div>

      <div class="scrollable-content">
        <p>Here is the paragraph you wrote:</p>
        <div class="content-container content-container-writer">
          <div class="content-text content-text-writer">
            <%= writerParagraph %>
          </div>
        </div>

        <p>We would like to understand <b>how you felt while writing your paragraph</b>. Please tell us by clicking on
          the
          grid below:</p>
        <br>

        <div class="affect-grid-wrapper">
          <!-- Vertical & corner labels - top -->
          <div class="grid-label-top">High Arousal</div>
          <div class="grid-label-right-top">Excitement</div>
          <div class="grid-label-left-top">Stress</div>

          <!-- Horizontal labels -->
          <div class="grid-label-left">Unpleasant<br>Feelings</div>
          <div class="grid-label-right">Pleasant<br>Feelings</div>

          <!-- Vertical & corner labels - bottom -->
          <div class="grid-label-bottom">Sleepiness</div>
          <div class="grid-label-right-bottom">Relaxation</div>
          <div class="grid-label-left-bottom">Depression</div>

          <div class="affect-grid-container" id="affectGrid">
            <!-- Grid lines will be added via JavaScript -->
            <div class="grid-lines" id="gridLines"></div>
            <!-- Selected point will be added when user clicks -->
          </div>
        </div>

        <!-- Hidden inputs to store grid coordinates (as percentages) -->
        <input type="hidden" id="gridX" name="gridX" required>
        <input type="hidden" id="gridY" name="gridY" required>

        <p id="gridInstruction" class="grid-instruction">Please click anywhere on the grid to indicate how you felt.</p>
        <br>
        <div class="progress-container">
          <div class="progress-bar">
            <div class="progress" style="width: <%= 10 + (index * 10) + 6 %>%"></div>
          </div>
          <div class="progress-text">
            <%= 10 + (index * 10) + 6 %>% complete
          </div>
        </div>

        <div class="button-container">
          <button type="submit" id="continueButton" class="button" disabled>Continue</button>
        </div>
        </form>
      </div>
    </div>
  </div>
  <script>
    const affectGrid = document.getElementById('affectGrid');
    const gridX = document.getElementById('gridX');
    const gridY = document.getElementById('gridY');
    const continueButton = document.getElementById('continueButton');
    const gridInstruction = document.getElementById('gridInstruction');
    const gridLines = document.getElementById('gridLines');

    // Add grid lines for visual reference
    function createGridLines() {
      // Add 8 horizontal lines (creating 9 sections)
      for (let i = 1; i <= 8; i++) {
        const hLine = document.createElement('div');
        hLine.className = 'horizontal-line';
        hLine.style.top = `${i * (100 / 9)}%`;
        gridLines.appendChild(hLine);
      }

      // Add 8 vertical lines (creating 9 sections)
      for (let i = 1; i <= 8; i++) {
        const vLine = document.createElement('div');
        vLine.className = 'vertical-line';
        vLine.style.left = `${i * (100 / 9)}%`;
        gridLines.appendChild(vLine);
      }
    }

    createGridLines();

    // Handle grid click
    affectGrid.addEventListener('click', function (e) {
      // Remove any previously selected point
      const existingPoint = affectGrid.querySelector('.selected-point');
      if (existingPoint) {
        existingPoint.remove();
      }

      // Get click coordinates relative to the grid
      const rect = affectGrid.getBoundingClientRect();
      const x = e.clientX - rect.left;
      const y = e.clientY - rect.top;

      // Create a visible point at click position
      const point = document.createElement('div');
      point.className = 'selected-point';
      point.style.left = `${x}px`;
      point.style.top = `${y}px`;
      affectGrid.appendChild(point);

      // Calculate coordinates as percentages (0-100)
      const xPercent = (x / rect.width) * 100;
      const yPercent = (y / rect.height) * 100;

      // Store values with 2 decimal precision
      // Note: We're keeping the traditional y-axis where 0 is top and 100 is bottom
      gridX.value = xPercent.toFixed(2);
      gridY.value = yPercent.toFixed(2);

      // Enable the continue button
      continueButton.disabled = false;
      gridInstruction.style.display = 'none';
    });
  </script>
</body>

</html>