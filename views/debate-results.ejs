<!-- views/debate-results.ejs -->
<!DOCTYPE html>
<html>

<head>
  <title>Oxford-Style Debate - Results</title>
  <link rel="stylesheet" href="/styles.css">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
</head>

<body>
  <div class="container" style="width: 900px;">
    <div class="study-card">
      <div class="results-header">
        <h1>Debate Complete</h1>
        <div class="results-badge">
          <span>Motion: <%= debate.topic.title %></span>
        </div>
      </div>

      <div class="thank-you-message">
        <h3>Thank you for your participation!</h3>
        <p>Your contribution is valuable to our research on comparing LLM and human debate performance.</p>
      </div>

      <div class="debate-transcript">
        <h2>Complete Debate Transcript</h2>
        <div class="transcript-container">
          <% debate.turns.forEach((turn, index) => { %>
            <div class="transcript-turn <%= turn.isAI ? 
                (turn.side === 'proposition' ? 'ai-proposition' : 'ai-opposition') : 
                (turn.side === 'proposition' ? 'human-proposition' : 'human-opposition') 
              %>">
              <div class="turn-header">
                <div class="turn-meta">
                  <span class="turn-number"><%= index + 1 %></span>
                  <span class="turn-role"><%= turn.isAI ? 'AI' : 'You' %> (<%= turn.side.toUpperCase() %>)</span>
                  <span class="turn-type"><%= turn.type.toUpperCase() %></span>
                </div>
                <div class="turn-stats">
                  <span class="word-count">
                    <%= turn.wordCount || turn.content.split(/\s+/).filter(word => word.length > 0).length %> words
                  </span>
                </div>
              </div>
              <div class="turn-content">
                <p><%= turn.content %></p>
              </div>
            </div>
          <% }); %>
        </div>
      </div>

      <div class="self-assessment">
        <h2>Self-Assessment and Feedback</h2>
        <p>Please take a moment to reflect on your debate experience.</p>
      
        <form action="/debate-results" method="POST">
          <div class="assessment-section">
            <h3>Debate Outcome</h3>
            <div class="form-group">
              <label for="winnerSide">Who made the stronger arguments?</label>
              <div class="radio-group">
                <div class="radio-option outcome-option">
                  <input type="radio" id="human-win" name="winnerSide" value="30" required>
                  <label for="human-win">You made stronger arguments</label>
                </div>
                <div class="radio-option outcome-option">
                  <input type="radio" id="draw" name="winnerSide" value="50" required>
                  <label for="draw">It was a draw</label>
                </div>
                <div class="radio-option outcome-option">
                  <input type="radio" id="ai-win" name="winnerSide" value="70" required>
                  <label for="ai-win">AI made stronger arguments</label>
                </div>
              </div>
            </div>
          </div>
      
          <div class="form-group">
            <label for="humanPerformance">How would you rate your own performance in this debate?</label>
            <div class="slider-container">
              <div class="slider-with-markers">
                <div class="slider-labels">
                  <span class="slider-label-left">Poor</span>
                  <span class="slider-label-right">Excellent</span>
                </div>
                <div class="slider-markers">
                  <span class="marker" style="left: 0%;">0</span>
                  <span class="marker" style="left: 50%;">50</span>
                  <span class="marker" style="left: 100%;">100</span>
                </div>
                <input type="range" id="humanPerformance" name="humanPerformance" min="0" max="100" class="continuous-slider unset-slider" required>
              </div>
              <div class="slider-value-display" id="humanPerformanceValue">Not set</div>
            </div>
          </div>
    
          <div class="form-group">
            <label for="aiPerformance">How would you rate the AI's performance in this debate?</label>
            <div class="slider-container">
              <div class="slider-with-markers">
                <div class="slider-labels">
                  <span class="slider-label-left">Poor</span>
                  <span class="slider-label-right">Excellent</span>
                </div>
                <div class="slider-markers">
                  <span class="marker" style="left: 0%;">0</span>
                  <span class="marker" style="left: 50%;">50</span>
                  <span class="marker" style="left: 100%;">100</span>
                </div>
                <input type="range" id="aiPerformance" name="aiPerformance" min="0" max="100" class="continuous-slider unset-slider" required>
              </div>
              <div class="slider-value-display" id="aiPerformanceValue">Not set</div>
            </div>
          </div>
      
          <div class="form-group">
            <label for="comments">Additional Comments (Optional)</label>
            <textarea id="comments" name="comments" rows="4" placeholder="Please share any additional thoughts about your debate experience, the AI's performance, or suggestions for improvement..."></textarea>
          </div>
      
          <div class="continue-options">
            <div class="option-choice">
              <div class="option-header">
                <h3>Continue to another debate?</h3>
                <p>You have completed <%= debate.currentIndex || 1 %> of your target debates.</p>
              </div>
              <div class="option-buttons">
                <button type="submit" name="nextAction" value="continue" class="button">Continue to Next Debate</button>
                <button type="submit" name="nextAction" value="finish" class="button button-secondary">Finish Session</button>
              </div>
            </div>
          </div>
        </form>
      </div>
    </div>
  </div>

  <style>
    /* Custom styles for the results page */
    .results-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 25px;
      padding-bottom: 15px;
      border-bottom: 1px solid #dee2e6;
    }

    .results-badge {
      background-color: #f8f9fa;
      padding: 10px 15px;
      border-radius: 8px;
      font-weight: bold;
      color: #495057;
      font-size: 0.9em;
      box-shadow: 0 2px 4px rgba(0,0,0,0.05);
    }

    .thank-you-message {
      background-color: #d4edda;
      color: #155724;
      padding: 15px 20px;
      border-radius: 8px;
      margin-bottom: 30px;
      text-align: center;
    }

    .thank-you-message h3 {
      margin-top: 0;
    }

    .thank-you-message p {
      margin-bottom: 0;
    }

    .debate-transcript {
      margin-bottom: 40px;
    }

    .transcript-container {
      max-height: 500px;
      overflow-y: auto;
      border: 1px solid #dee2e6;
      border-radius: 8px;
      padding: 10px;
      background-color: #f8f9fa;
    }

    .transcript-turn {
      margin-bottom: 15px;
      padding: 15px;
      border-radius: 8px;
      box-shadow: 0 2px 4px rgba(0,0,0,0.05);
      background-color: white;
    }

    .transcript-turn:last-child {
      margin-bottom: 0;
    }

    .transcript-turn.human-proposition {
      border-left: 4px solid #28a745;
    }

    .transcript-turn.human-opposition {
      border-left: 4px solid #dc3545;
    }

    .transcript-turn.ai-proposition {
      border-left: 4px solid #20c997;
    }

    .transcript-turn.ai-opposition {
      border-left: 4px solid #e83e8c;
    }

    .turn-header {
      display: flex;
      justify-content: space-between;
      margin-bottom: 10px;
    }

    .turn-meta {
      display: flex;
      align-items: center;
      gap: 10px;
    }

    .turn-number {
      background-color: #e9ecef;
      color: #495057;
      width: 24px;
      height: 24px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 0.8em;
      font-weight: bold;
    }

    .turn-role {
      font-weight: bold;
    }

    .turn-type {
      font-size: 0.8em;
      color: #6c757d;
    }

    .turn-stats {
      font-size: 0.8em;
      color: #6c757d;
    }

    .turn-content {
      line-height: 1.6;
    }

    .self-assessment {
      padding-top: 20px;
    }

    .assessment-section {
      background-color: #f8f9fa;
      border-radius: 8px;
      padding: 20px;
      margin-bottom: 25px;
    }

    .assessment-section h3 {
      margin-top: 0;
      margin-bottom: 15px;
      color: #495057;
    }

    .radio-group {
      display: flex;
      flex-wrap: wrap;
      gap: 15px;
      margin-top: 10px;
    }

    .radio-option {
      display: flex;
      align-items: center;
      gap: 5px;
    }

    .outcome-option {
      flex: 1;
      min-width: 200px;
      background-color: #fff;
      padding: 12px;
      border-radius: 8px;
      box-shadow: 0 1px 3px rgba(0,0,0,0.1);
      transition: background-color 0.2s;
    }

    .outcome-option:hover {
      background-color: #f0f0f0;
    }

    .outcome-option input[type="radio"]:checked + label {
      font-weight: bold;
      color: #4285f4;
    }

    .continue-options {
      margin-top: 30px;
      padding-top: 20px;
      border-top: 1px solid #dee2e6;
    }

    .option-choice {
      display: flex;
      justify-content: space-between;
      align-items: center;
      flex-wrap: wrap;
    }

    .option-header h3 {
      margin-top: 0;
      margin-bottom: 5px;
    }

    .option-header p {
      margin: 0;
      color: #6c757d;
    }

    .option-buttons {
      display: flex;
      gap: 15px;
      margin-top: 15px;
    }

    .button-secondary {
      background-color: #6c757d;
    }

    
.slider-container {
      margin: 15px 0 25px;
      display: flex;
      flex-direction: column;
      width: 100%;
    }

    .slider-with-markers {
      position: relative;
      width: 100%;
      padding-top: 30px; /* Increased to accommodate labels above */
      margin: 10px 0;
    }

    .slider-markers {
      position: absolute;
      top: 15px; /* Positioned below the Poor/Excellent labels */
      width: 100%;
      display: flex;
      justify-content: space-between;
      font-size: 0.7em;
      color: #666;
    }

    .marker {
      position: absolute;
      transform: translateX(-50%);
    }

    /* New styles for Poor/Excellent labels positioned above 0 and 100 */
    .slider-labels {
      position: absolute;
      top: 0;
      width: 100%;
      display: flex;
      justify-content: space-between;
      font-size: 0.85em;
      color: #666;
      font-weight: 500;
    }

    .slider-label-left {
      position: absolute;
      left: 0;
      transform: translateX(-50%);
    }

    .slider-label-right {
      position: absolute;
      right: 0;
      transform: translateX(50%);
    }

    .continuous-slider {
      -webkit-appearance: none;
      width: 100%;
      height: 8px;
      border-radius: 4px;
      background: #e9ecef;
      outline: none;
      margin: 10px 0;
    }

    .continuous-slider::-webkit-slider-thumb {
      -webkit-appearance: none;
      appearance: none;
      width: 20px;
      height: 20px;
      border-radius: 50%;
      background: #4285f4;
      cursor: pointer;
      border: 2px solid white;
      box-shadow: 0 2px 4px rgba(0,0,0,0.2);
    }

    .continuous-slider::-moz-range-thumb {
      width: 20px;
      height: 20px;
      border-radius: 50%;
      background: #4285f4;
      cursor: pointer;
      border: 2px solid white;
      box-shadow: 0 2px 4px rgba(0,0,0,0.2);
    }

    .slider-value-display {
      text-align: center;
      font-weight: bold;
      color: #4285f4;
      margin-top: 10px;
      font-size: 1.1em;
    }
    
    /* Style for unset sliders */
    .unset-slider {
      opacity: 0.7;
    }
    
    .unset-slider.set {
      opacity: 1;
    }
    
    .slider-container {
      margin: 15px 0 25px;
      display: flex;
      flex-direction: column;
      width: 100%;
    }

    .slider-with-markers {
      position: relative;
      width: 100%;
      padding-top: 30px; /* Increased to accommodate labels above */
      margin: 10px 0;
    }

    .slider-markers {
      position: absolute;
      top: 15px; /* Positioned below the Poor/Excellent labels */
      width: 100%;
      display: flex;
      justify-content: space-between;
      font-size: 0.7em;
      color: #666;
    }

    .marker {
      position: absolute;
      transform: translateX(-50%);
    }

    /* New styles for Poor/Excellent labels positioned above 0 and 100 */
    .slider-labels {
      position: absolute;
      top: 0;
      width: 100%;
      display: flex;
      justify-content: space-between;
      font-size: 0.85em;
      color: #666;
      font-weight: 500;
    }

    .slider-label-left {
      position: absolute;
      left: 0;
      transform: translateX(-50%);
    }

    .slider-label-right {
      position: absolute;
      right: 0;
      transform: translateX(50%);
    }

    .continuous-slider {
      -webkit-appearance: none;
      width: 100%;
      height: 8px;
      border-radius: 4px;
      background: #e9ecef;
      outline: none;
      margin: 10px 0;
    }

    .continuous-slider::-webkit-slider-thumb {
      -webkit-appearance: none;
      appearance: none;
      width: 20px;
      height: 20px;
      border-radius: 50%;
      background: #4285f4;
      cursor: pointer;
      border: 2px solid white;
      box-shadow: 0 2px 4px rgba(0,0,0,0.2);
    }

    .continuous-slider::-moz-range-thumb {
      width: 20px;
      height: 20px;
      border-radius: 50%;
      background: #4285f4;
      cursor: pointer;
      border: 2px solid white;
      box-shadow: 0 2px 4px rgba(0,0,0,0.2);
    }

    .slider-value-display {
      text-align: center;
      font-weight: bold;
      color: #4285f4;
      margin-top: 10px;
      font-size: 1.1em;
    }
    
    /* Style for unset sliders */
    .unset-slider {
      opacity: 0.7;
    }
    
    .unset-slider.set {
      opacity: 1;
    }
    
    /* .unset-slider.set::-webkit-slider-thumb {
      display: block; 
    } */
    
    /* .unset-slider.set::-moz-range-thumb {
      display: block; 
    } */
  </style>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Setup slider logic for performance ratings
      setupUnsetSlider('humanPerformance');
      setupUnsetSlider('aiPerformance');
      
      // Add form validation to ensure all required fields are set before submission
      document.querySelector('form').addEventListener('submit', function(e) {
        const humanPerformance = document.getElementById('humanPerformance');
        const aiPerformance = document.getElementById('aiPerformance');
        const winnerRadios = document.querySelectorAll('input[name="winnerSide"]');
        
        // Check if winner is selected
        let winnerSelected = false;
        winnerRadios.forEach(radio => {
          if (radio.checked) winnerSelected = true;
        });
        
        // Check if sliders have been interacted with
        const humanPerformanceSet = humanPerformance.classList.contains('set');
        const aiPerformanceSet = aiPerformance.classList.contains('set');
        
        if (!winnerSelected || !humanPerformanceSet || !aiPerformanceSet) {
          e.preventDefault();
          alert('Please complete all ratings before continuing.');
        }
      });
      
      function setupUnsetSlider(id) {
        const slider = document.getElementById(id);
        const valueDisplay = document.getElementById(id + 'Value');
        
        // Set the initial display text
        valueDisplay.textContent = 'Not set';
        // Set a default underlying value for the slider
        slider.value = 50; 
        
        slider.addEventListener('input', function() {
          // Add 'set' class on first interaction to change styling if needed
          if (!this.classList.contains('set')) {
            this.classList.add('set');
          }
          // Update the display with the slider's current value
          valueDisplay.textContent = this.value;
        });
      }
    });
  </script>
  <script src="/button-disable.js"></script>
</body>

</html>