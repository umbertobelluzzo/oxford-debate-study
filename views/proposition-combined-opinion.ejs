<!-- views/proposition-combined-opinion.ejs -->
<!DOCTYPE html>
<html>

<head>
    <title>Political Opinion Study - Your Opinion</title>
    <link rel="stylesheet" href="/styles.css">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
</head>

<body>
    <div class="container">
        <div class="study-card">
            <div class="sticky-header">
                <div class="counter-badges">
                    <div class="counter-badge-container">
                        <span class="counter-badge-label">Statement:</span>
                        <div class="counter-badge">
                            <%= index %> of <%= total %>
                        </div>
                    </div>
                    <div class="counter-badge-container">
                        <span class="counter-badge-label">Step:</span>
                        <div class="counter-badge step-badge">1 of 2</div>
                    </div>
                    <div class="counter-badge-container">
                        <span class="counter-badge-label">Screen:</span>
                        <div class="counter-badge screen-badge">2 of 7</div>
                    </div>
                </div>

                <form action="/proposition-combined-opinion" method="POST" id="combinedForm">
                    <p>Consider this statement:</p>
                    <div class="content-container content-container-proposition">
                        <div class="content-text content-text-proposition">
                            <%= proposition %>
                        </div>
                    </div>
            </div>

            <div class="scrollable-content">
                <div class="form-group">
                    <label for="stancePre">What is <b>your level of agreement</b> with the statement?</label>
                    <div class="stance-scale">
                        <span>0 = Strongly disagree </span>
                        <span>50 = Ambivalent </span>
                        <span>100 = Strongly agree</span>
                    </div>
                    <input type="range" id="stancePre" name="stancePre" min="0" max="100" class="slider slider-unset"
                        required>
                    <div class="stance-value">
                        <span id="stancePreValue" class="hidden">0</span>
                        <span id="stancePreLabel" class="slider-label">Please click on the scale to set your
                            rating</span>
                    </div>
                </div>

                <div class="form-group">
                    <label for="bullets">Please explain the <b>key reasons</b> for your opinion in 2-4 bullet
                        points. Start each bullet point with "-" and put each bullet point on a separate line.</label>
                    <textarea id="bullets" name="bullets" rows="6"
                        placeholder="- First point&#10;- Second point&#10;- ..." required></textarea>
                    <div id="bulletCount" class="bullet-count">Currently: 0 bullet points</div>
                    <div id="bulletError" class="error-message" style="display: none; color: red; margin-top: 5px;">
                        Please provide at least 2 bullet points each starting with "-".</div>
                </div>

                <div class="form-group">
                    <label for="paragraph">Please expand your bullet points into a <b>short paragraph</b> (around
                        100-150
                        words), in which you explain your opinion.</label>
                    <textarea id="paragraph" name="paragraph" rows="9" required></textarea>
                    <div id="wordCount" class="word-count">Currently: 0 words</div>
                    <div id="wordError" class="error-message" style="display: none; color: red; margin-top: 5px;">Please
                        write
                        at least 100 words.</div>
                </div>
                <br>

                <div class="button-container">
                    <button type="submit" class="button">Continue</button>
                </div>
                </form>
            </div>
        </div>
    </div>

    <script>
        // Update stance value display
        const stanceSlider = document.getElementById('stancePre');
        const stanceValue = document.getElementById('stancePreValue');
        const stanceLabel = document.getElementById('stancePreLabel');
        const combinedForm = document.getElementById('combinedForm');

        // Initialize slider state
        let sliderSet = false;

        stanceSlider.oninput = function () {
            // Update the value display
            stanceValue.textContent = "Current value: " + this.value;

            // Show the value and hide the prompt
            stanceValue.classList.remove('hidden');
            stanceLabel.classList.add('hidden');

            // Mark the slider as set
            this.classList.remove('slider-unset');
            this.classList.add('slider-set');

            // Update state
            sliderSet = true;
        }

        // Count bullet points
        const bullets = document.getElementById('bullets');
        const bulletCount = document.getElementById('bulletCount');
        const bulletError = document.getElementById('bulletError');

        bullets.oninput = function () {
            // Count bullet points by looking for lines starting with - or • or *
            const bulletLines = this.value.split('\n').filter(line =>
                line.trim().startsWith('-') ||
                line.trim().startsWith('–') ||  // en dash
                line.trim().startsWith('—') ||  // em dash
                line.trim().startsWith('⁃') ||  // hyphen bullet
                line.trim().startsWith('⁌') ||  // fallback bullet
                line.trim().startsWith('⁍') ||  // reverse bullet
                line.trim().startsWith('•') ||
                line.trim().startsWith('*')  
            );

            const count = bulletLines.length;
            bulletCount.textContent = count + ' bullet point' + (count !== 1 ? 's' : '');

            if (count < 2) {
                bulletCount.classList.add('below-range');
                bulletCount.classList.remove('in-range', 'above-range');
                bulletError.style.display = 'block';
            } else if (count > 4) {
                bulletCount.classList.add('above-range');
                bulletCount.classList.remove('in-range', 'below-range');
                bulletError.style.display = 'none';
            } else {
                bulletCount.classList.add('in-range');
                bulletCount.classList.remove('below-range', 'above-range');
                bulletError.style.display = 'none';
            }
        }

        // Word count for paragraph
        const paragraph = document.getElementById('paragraph');
        const wordCount = document.getElementById('wordCount');
        const wordError = document.getElementById('wordError');

        paragraph.oninput = function () {
            const words = this.value.match(/\S+/g) || [];
            const count = words.length;
            wordCount.textContent = count + ' word' + (count !== 1 ? 's' : '');

            if (count < 100) {
                wordCount.classList.add('below-range');
                wordCount.classList.remove('in-range', 'above-range');
                wordError.style.display = 'block';
            } else if (count > 150) {
                wordCount.classList.add('above-range');
                wordCount.classList.remove('in-range', 'below-range');
                wordError.style.display = 'none';
            } else {
                wordCount.classList.add('in-range');
                wordCount.classList.remove('below-range', 'above-range');
                wordError.style.display = 'none';
            }
        }

        // Form validation before submission
        combinedForm.addEventListener('submit', function (e) {
            let formValid = true;

            // Check if slider has been set
            if (!sliderSet) {
                stanceLabel.style.color = 'red';
                stanceLabel.style.fontWeight = 'bold';
                formValid = false;
            }

            // Check bullet points
            const bulletLines = bullets.value.split('\n').filter(line => {
                const trimmedLine = line.trim();
                return trimmedLine.startsWith('-') ||
                    trimmedLine.startsWith('–') ||  // en dash
                    trimmedLine.startsWith('—') ||  // em dash
                    trimmedLine.startsWith('•') ||
                    trimmedLine.startsWith('*') ||
                    trimmedLine.startsWith('⁃') ||  // hyphen bullet
                    trimmedLine.startsWith('⁌') ||  // fallback bullet
                    trimmedLine.startsWith('⁍');    // reverse bullet
            });

            if (bulletLines.length < 2) {
                bulletError.style.display = 'block';
                formValid = false;
            }

            // Check word count
            const words = paragraph.value.match(/\S+/g) || [];
            const count = words.length;

            if (count < 100) {
                wordError.style.display = 'block';
                formValid = false;
            }

            if (!formValid) {
                e.preventDefault(); // Prevent form submission
                alert('Please complete all sections before continuing.');
            }
        });
    </script>
</body>

</html>